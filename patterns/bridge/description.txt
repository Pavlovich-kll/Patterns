МОСТ — это структурный паттерн, который разделяет бизнес-логику
или большой класс на несколько отдельных иерархий,
которые потом можно развивать отдельно друг от друга.

особенно полезен, когда вам приходится делать кросс-платформенные приложения,
поддерживать несколько типов баз данных
или работать с разными поставщиками похожего API
(например, cloud-сервисы, социальные сети и т. д.)

ПРИЗНАКО ПРИМЕНЕНИЯ ПАТТЕРНА:
Если в программе чётко выделены классы «управления»
и несколько видов классов «платформ»,
причём управляющие объекты делегируют выполнение платформам,
то можно сказать, что у вас используется Мост.

ПРИМЕР:
Этот пример показывает разделение кода пультов дистанционного управления
и бытовых приборов.

Пульты выступают «абстракцией», а приборы — «реализацией».
Одни и те же приборы(реализации) могут работать с разными пультами(абстракциями),
а пульты управлять разными устройствами.

Применив паттерн Мост, мы можем изменять классы пультов и приборов
независимо друг от друга.